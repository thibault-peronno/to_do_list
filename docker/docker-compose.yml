version: '3.8'
services:
  # service Node JS
  app:
    build:
      context: ./
      dockerfile: ./dockerfile.yml
    env_file:
      - ../backend/.env
    ports:
      - "8080:8080"
    depends_on:
      - mysqldb
      - adminer
  # Service Nginx, to http. + file nginx.config in backend/config
  nginx:
    container_name: nginx
    image: nginx:alpine
    restart : always
    env_file:
      - ../backend/.env
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
    ports:
    # <host port> : <container port>
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/config/nginx:/etc/nginx/conf.d
      - ./backend/config/letsencrypt:/backend/config/letsencrypt:ro
      - ./certbot/data:/var/www/certbot
  # image for https
  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   env_file:
  #     - ../backend/.env
  #   depends_on:
  #     - nginx
  #   command: >-
  #            certonly --reinstall --webroot --webroot-path=/var/www/certbot
  #            --email ${EMAIL} --agree-tos --no-eff-email
  #            -d ${DOMAIN}
  #   volumes:
  #     - ./backend/config/letsencrypt:/backend/config/letsencrypt
  #     - ./certbot/data:/var/www/
  # image MySql doc :https://hub.docker.com/_/mysql
  mysqldb:
    container_name: mysql
    image: mysql:8.0.35
    restart: always
    env_file:
      - ../backend/.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DBROOT}
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_USER = ${USER}
      - MYSQL_PASSWORD= ${PASSWORD}
    ports:
      - "3306:3306"
    depends_on:
      - nginx
    volumes:
      - db_data:/var/lib/mysql
  # service Adminer
  adminer:
    container_name: adminer
    image: dockette/adminer:full-php5
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - mysqldb
    env_file:
      - ../backend/.env
volumes:
  db_data: {}